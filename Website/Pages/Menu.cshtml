@page
@model Website.Pages.MenuModel
@{
    ViewData["Title"] = "Menu";
}
@*@{DinoDiner.Menu.menu menu = new DinoDiner.Menu.menu();}*@
<div id="Sidebar">
    @if (@Model.search == null)
    {
        @(Model.search = "");
    }
    <div>
        <h1>Menu</h1>
        @if (Model.menuCategory.Count == 0 || Model.menuCategory.Contains("Combo"))
        {
            <h2>Combos</h2>
            @foreach (DinoDiner.Menu.CretaceousCombo combo in @Model.menu.AvailableCombos)
            {
                if (combo.Price >= @Model.minimumPrice && combo.Price <= @Model.maximumPrice && combo.Description.Contains(@Model.search, StringComparison.OrdinalIgnoreCase))
                {
                    <div>
                        <div class="menu-item">
                            <h3>
                                @combo.Description
                            </h3>
                            <h4>
                                Price: $@combo.Price<br />
                                Calories: @combo.Calories<br />
                                Ingredients:
                                <div>
                                    @combo.Entree,
                                    @combo.Side,
                                    @combo.Drink
                                </div>
                            </h4>
                        </div>
                    </div>
                }
            }
        }
        @if (Model.menuCategory.Count == 0 || Model.menuCategory.Contains("Entree"))
        {
            <h2>Entrees</h2>
            @foreach (DinoDiner.Menu.Entree entree in @Model.menu.AvailableEntrees)
            {
                if (entree.Price >= @Model.minimumPrice && entree.Price <= @Model.maximumPrice && entree.Description.Contains(@Model.search, StringComparison.OrdinalIgnoreCase))
                {
                    <div>
                        <div class="menu-item">
                            <h3>@entree.Description</h3>
                            <h4>
                                Price: $@entree.Price <br />
                                Calories: @entree.Calories<br />
                                Ingredients:
                                @foreach (string s in entree.Ingredients)
                                {
                                    <div>
                                        @s
                                    </div>
                                    <br />
                                }
                            </h4>
                        </div>
                    </div>
                }
            }
        }

        @if (Model.menuCategory.Count == 0 || Model.menuCategory.Contains("Side"))
        {

            <h2>Sides</h2>
            @foreach (DinoDiner.Menu.Side side in @Model.menu.AvailableSides)
            {
                if (side.Price >= @Model.minimumPrice && side.Price <= @Model.maximumPrice && side.Description.Contains(@Model.search, StringComparison.OrdinalIgnoreCase))
                {
                    <div>
                        <div class="menu-item">
                            <h3>
                                @side.Description
                            </h3>
                            <h4>
                                Price: $@side.Price<br />
                                Calories: @side.Calories<br />
                                Ingredients:
                                @foreach (string s in side.Ingredients)
                                {
                                    if (!@Model.ingredientFilters.Contains(s))
                                    {
                                        <div>
                                            @s
                                        </div>
                                    }
                                }
                                <br />
                            </h4>
                        </div>
                    </div>
                }
            }
        }

        @if (Model.menuCategory.Count == 0 || Model.menuCategory.Contains("Drink"))
        {
            <h2>Drinks</h2>
            @foreach (DinoDiner.Menu.Drink drink in @Model.menu.AvailableDrinks)
            {
                if (drink.Price >= @Model.minimumPrice && drink.Price <= @Model.maximumPrice && drink.Description.Contains(@Model.search, StringComparison.OrdinalIgnoreCase))
                {
                    <div>
                        <div class="menu-item">
                            <h3>@drink.Description</h3>
                            <h4>
                                Price: $@drink.Price<br />
                                Calories: @drink.Calories<br />
                                Ingredients:
                                @foreach (string s in drink.Ingredients)
                                {
                                    <div>
                                        @s
                                    </div>
                                }
                                <br />
                            </h4>
                        </div>
                    </div>
                }
            }
        }

    </div>

    <div>
        <div>
            <form method="post">
                <input type="text" name="search" id="search" value="@Model.search" />
                <input type="submit" value="Search" />
                <input type="submit" name="filter" id="filter" value="Apply Filter(s)" />
                <h2>Menu Category</h2>
                <div id="CategoryBoxes">
                    <label>
                        <input type="checkbox" value="Combo" class="menu-category" name="menuCategory" checked="@Model.menuCategory.Contains("Combo")" />
                        Combo
                    </label>
                    <label>
                        <input type="checkbox" value="Entree" class="menu-category" name="menuCategory" checked="@Model.menuCategory.Contains("Entree")" />
                        Entree
                    </label>
                    <label>
                        <input type="checkbox" value="Side" class="menu-category" name="menuCategory" checked="@Model.menuCategory.Contains("Side")" />
                        Side
                    </label>
                    <label>
                        <input type="checkbox" value="Drink" class="menu-category" name="menuCategory" checked="@Model.menuCategory.Contains("Drink")" />
                        Drink
                    </label>
                </div>
                <div>
                    <h4>Price</h4>
                    <label>
                        Min:
                        <input type="number" id="minimum-price" min="0" max="10" step="0.01" name="minimumPrice" value="@Model.minimumPrice" />
                    </label>
                    <label>
                        Max:
                        <input type="number" id="maximum-price" min="0" max="10" step="0.01" name="maximumPrice" value="@Model.maximumPrice" />
                    </label>
                </div>
                <br />
                <div>
                    <label>
                        Excluding Ingredients
                    </label>
                    <div id="Exclusions">
                        @foreach (string s in @Model.menu.PossibleIngredients)
                        {
                            <label>
                                <input type="checkbox" value="@s" class="exclude-ingredient" name=@s checked="@Model.ingredientFilters.Contains(@s)" />
                                @s
                            </label>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>